# This file is used to configure your project.
# Read more about the various options under:
# http://setuptools.readthedocs.io/en/latest/setuptools.html#configuring-setup-using-setup-cfg-files

[metadata]
name = pyrho
description = Add a short description here!
author = jmmshn
author-email = jmmshn@gmail.com
license = mit
long-description = file: README.md
long-description-content-type = text/x-rst; charset=UTF-8
url = https://github.com/materialsproject/pyRho/
project-urls =
    Documentation = https://pyscaffold.org/
# Change if running only on Windows, Mac or Linux (comma-separated)
platforms = any
# Add here all kinds of additional classifiers as defined under
# https://pypi.python.org/pypi?%3Aaction=list_classifiers
classifiers =
    Development Status :: 2 - Pre-Alpha
    Programming Language :: Python :: 3.7
    Intended Audience :: Science/Research
    Intended Audience :: System Administrators
    Intended Audience :: Information Technology
    Intended Audience :: Machine Learning
    Operating System :: OS Independent
    Topic :: Database :: Back-Ends
    Topic :: Scientific/Engineering

[options]
zip_safe = False
packages = find:
include_package_data = True
package_dir =
    =src
# DON'T CHANGE THE FOLLOWING LINE! IT WILL BE UPDATED BY PYSCAFFOLD!
setup_requires = pyscaffold>=3.2a0,<3.3a0
# Add here dependencies of your project (semicolon/line-separated), e.g.
install_requires =
    pymatgen>=2020.8.3
    h5py>=2.10.0
# The usage of test_requires is discouraged, see `Dependency Management` docs
# tests_require = pytest; pytest-cov
# Require a specific Python version, e.g. Python 2.7 or >= 3.4
# python_requires = >=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*

[options.packages.find]
where = pyrho
exclude =
    tests
    notebooks

[options.extras_require]
# Add here additional requirements for extra features, to install with:
# `pip install batt_builders[PDF]` like:
# PDF = ReportLab; RXP
# Add here test requirements (semicolon/line-separated)
testing =
    pytest
    pytest-cov

[options.entry_points]
# Add here console scripts like:
# console_scripts =
#     script_name = batt_builders.module:function
# For example:
# console_scripts =
#     fibonacci = batt_builders.skeleton:run
# And any other entry points, for example:
# pyscaffold.cli =
#     awesome = pyscaffoldext.awesome.extension:AwesomeExtension

[test]
# py.test options when running `python setup.py test`
# addopts = --verbose
extras = True

[tool:pytest]
# Options for py.test:
# Specify command line options as you would do when invoking py.test directly.
# e.g. --cov-report html (or xml) for html/xml output or --junitxml junit.xml
# in order to write a coverage file that can be read by Jenkins.
norecursedirs =
    dist
    build
    .tox
testpaths =
    src/pyrho
python_files = test_*.py

[aliases]
dists = bdist_wheel

[bdist_wheel]
# Use this option if your package is pure-python
universal = 1

[devpi:upload]
# Options for the devpi: PyPI server and packaging tool
# VCS export must be deactivated since we are using setuptools-scm
no-vcs = 1
formats = bdist_wheel

[pycodestyle]
max-line-length=120

[pydocstyle]
max-line-length=120
ignore = D105,D2,D4
match-dir=(?!(tests)).*

[flake8]
# Some sane defaults for the code style checker flake8
max-line-length = 120
extend-ignore = E741,W291,W293,E501,E231,E203,W605
exclude =
    .tox
    build
    dist
    .eggs
    src/docs/conf.py

[mypy]
python_version = 3.8
ignore_missing_imports = True
